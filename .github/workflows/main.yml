# This is a basic workflow to Build and Test using Actions

name: Build

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest    
    steps:
      - name: Cache it out
        id: cache-pipenv
        uses: actions/cache@v2
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-${{ hashFiles('Pipfile.lock') }}
          restore-keys: |
              ${{ runner.os }}-pipenv-
      
      - name: Checkout pytsk
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        uses: actions/checkout@v2
        with:
          repository: 'py4n6/pytsk'
          path: 'pytsk'
          
      - name: Install build dependencies for pytsk
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        run: sudo apt-get install automake autotools-dev build-essential git libtool python3 python3-dev python3-distutils python3-setuptools
          
      - name: Update pytsk
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        run: |
            cd pytsk
            python3 setup.py update
          
      - name: Build pytsk
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        run: |
          cd pytsk
          python3 setup.py build
          
      - name: Install pytsk
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        run: |
          cd pytsk
          sudo python3 setup.py install
          pip3 list | grep pytsk
                              
      - name: Checkout libewf
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        uses: actions/checkout@v2
        with:
          repository: 'libyal/libewf'
          path: 'libewf'
          
      - name: Install dependencies for libewf
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        run: sudo apt-get install build-essential debhelper fakeroot autotools-dev flex bison zlib1g-dev libbz2-dev libssl-dev libfuse-dev python-dev python-setuptools python3-dev python3-setuptools
      
      - name: Sync libs for libewf
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        run: |
          cd libewf
          ./synclibs.sh
          ./autogen.sh
          ./configure --enable-python
          
      - name: Build libewf
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        run: |
          cd libewf
          python3 setup.py build
          
      - name: Install libewf
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        run: |
          cd libewf
          sudo python3 setup.py install
          
      - name: Checkout slack_handler
        uses: actions/checkout@v2
        with:
          path: 'slack_handler'
          
      - name: Test slack_handler
        run: |
          pip3 install pytest
          cd slack_handler/
          pytest tests/test_slack_handler.py
